% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.surv_xgboost.R
\name{predict.surv_xgboost}
\alias{predict.surv_xgboost}
\title{Prediction method for surv_xgboost model}
\usage{
\method{predict}{surv_xgboost}(object, newdata, type = "risk",
  times = NULL)
}
\arguments{
\item{object}{a surv_xgboost object obtained by \code{xgb.train.surv}}

\item{newdata}{A data.frame/matrix to make predictions for}

\item{type}{Either "risk" or "surv"}

\item{times}{Times at which to estimate the survival curve at. Default is original dataset unique death times.}
}
\value{
For \code{type = "risk"} a vector of risk scores, for \code{type = "surv"} a matrix with
columns corresponding to times and rows corresponding to input newdata rows.
}
\description{
\code{predict.surv_xgboost} is a method for surv_xgboost
objects that enables preidcting either risk (implemented also in the xgboost package)
or the full survival curve.
}
\examples{
library(survival)
data("lung")
library(survXgboost)
x <- lung[complete.cases(lung), ] # doesn't handle missing values at the moment
x$status <- x$status - 1 # format status variable correctly such that 1 is event/death and 0 is censored/alive

# train surv_xgboost
surv_xgboost_model <- xgb.train.surv(
  x = x, time_var = "time", status_var = "status",
  val_frac = 0.1,
  param_list = list(
    objective = "survival:cox",
    eval_metric = "cox-nloglik",
    eta = 0.01 # larger eta leads to algorithm not converging, resulting in NaN predictions
  ),
  nrounds = 1000,
  early_stopping_rounds = 10
)

x$status <- NULL
x$time <- NULL

# predict survival curves
times <- seq(10, 1000, 50)
survival_curves <- predict(object = surv_xgboost_model, newdata = x, type = "surv", times = times)
matplot(times, t(survival_curves[1:5, ]), type = "l")

# predict risk score
risk_scores <- predict(object = surv_xgboost_model, newdata = x, type = "risk")
print(head(risk_scores))
}
\seealso{
\code{\link{xgb.train.surv}}
}
